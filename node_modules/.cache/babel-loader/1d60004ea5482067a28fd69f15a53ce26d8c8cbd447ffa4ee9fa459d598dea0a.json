{"ast":null,"code":"var _jsxFileName = \"/home/natty/food-bot/src/pages/PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaWallet, FaMobileAlt, FaBank } from \"react-icons/fa\";\nimport \"./paymentPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = ({\n  totalPrice\n}) => {\n  _s();\n  const [selectedMethod, setSelectedMethod] = useState(null);\n  const navigate = useNavigate();\n  const paymentMethods = [{\n    id: \"telebirr\",\n    name: \"Telebirr\",\n    icon: /*#__PURE__*/_jsxDEV(FaMobileAlt, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 47\n    }, this)\n  }, {\n    id: \"cbe\",\n    name: \"CBE Bank\",\n    icon: /*#__PURE__*/_jsxDEV(FaBank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 42\n    }, this)\n  }, {\n    id: \"amole\",\n    name: \"Amole\",\n    icon: /*#__PURE__*/_jsxDEV(FaWallet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 41\n    }, this)\n  }];\n  const handlePayment = () => {\n    if (!selectedMethod) {\n      alert(\"Please select a payment method\");\n      return;\n    }\n\n    // Navigate to Chapa Payment API Integration (You will add the logic here)\n    alert(`Proceeding to payment with ${selectedMethod}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-methods\",\n      children: paymentMethods.map(method => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `payment-option ${selectedMethod === method.id ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedMethod(method.id),\n        children: [method.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: method.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, method.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"$\", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pay-button\",\n      onClick: handlePayment,\n      children: [\"Pay with \", selectedMethod ? paymentMethods.find(m => m.id === selectedMethod).name : \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"uzvsPEbzNSMiostsS7QSWNQf2gI=\", false, function () {\n  return [useNavigate];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useNavigate","FaWallet","FaMobileAlt","FaBank","jsxDEV","_jsxDEV","PaymentPage","totalPrice","_s","selectedMethod","setSelectedMethod","navigate","paymentMethods","id","name","icon","fileName","_jsxFileName","lineNumber","columnNumber","handlePayment","alert","className","children","map","method","onClick","toFixed","find","m","_c","$RefreshReg$"],"sources":["/home/natty/food-bot/src/pages/PaymentPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaWallet, FaMobileAlt, FaBank } from \"react-icons/fa\";\nimport \"./paymentPage.css\";\n\nconst PaymentPage = ({ totalPrice }) => {\n  const [selectedMethod, setSelectedMethod] = useState(null);\n  const navigate = useNavigate();\n\n  const paymentMethods = [\n    { id: \"telebirr\", name: \"Telebirr\", icon: <FaMobileAlt /> },\n    { id: \"cbe\", name: \"CBE Bank\", icon: <FaBank /> },\n    { id: \"amole\", name: \"Amole\", icon: <FaWallet /> },\n  ];\n\n  const handlePayment = () => {\n    if (!selectedMethod) {\n      alert(\"Please select a payment method\");\n      return;\n    }\n    \n    // Navigate to Chapa Payment API Integration (You will add the logic here)\n    alert(`Proceeding to payment with ${selectedMethod}`);\n  };\n\n  return (\n    <div className=\"payment-page\">\n      <h1>Payment</h1>\n      <div className=\"payment-methods\">\n        {paymentMethods.map((method) => (\n          <button\n            key={method.id}\n            className={`payment-option ${selectedMethod === method.id ? \"selected\" : \"\"}`}\n            onClick={() => setSelectedMethod(method.id)}\n          >\n            {method.icon}\n            <span>{method.name}</span>\n          </button>\n        ))}\n      </div>\n      <div className=\"price-section\">\n        <p>Price</p>\n        <h2>${totalPrice.toFixed(2)}</h2>\n      </div>\n      <button className=\"pay-button\" onClick={handlePayment}>\n        Pay with {selectedMethod ? paymentMethods.find(m => m.id === selectedMethod).name : \"...\"}\n      </button>\n    </div>\n  );\n};\n\nexport default PaymentPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,gBAAgB;AAC9D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,cAAc,GAAG,CACrB;IAAEC,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,UAAU;IAAEC,IAAI,eAAEV,OAAA,CAACH,WAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC3D;IAAEN,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,UAAU;IAAEC,IAAI,eAAEV,OAAA,CAACF,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACjD;IAAEN,EAAE,EAAE,OAAO;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,eAAEV,OAAA,CAACJ,QAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,CACnD;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACX,cAAc,EAAE;MACnBY,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;;IAEA;IACAA,KAAK,CAAC,8BAA8BZ,cAAc,EAAE,CAAC;EACvD,CAAC;EAED,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BlB,OAAA;MAAAkB,QAAA,EAAI;IAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBd,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BX,cAAc,CAACY,GAAG,CAAEC,MAAM,iBACzBpB,OAAA;QAEEiB,SAAS,EAAE,kBAAkBb,cAAc,KAAKgB,MAAM,CAACZ,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;QAC9Ea,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACe,MAAM,CAACZ,EAAE,CAAE;QAAAU,QAAA,GAE3CE,MAAM,CAACV,IAAI,eACZV,OAAA;UAAAkB,QAAA,EAAOE,MAAM,CAACX;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GALrBM,MAAM,CAACZ,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNd,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BlB,OAAA;QAAAkB,QAAA,EAAG;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACZd,OAAA;QAAAkB,QAAA,GAAI,GAAC,EAAChB,UAAU,CAACoB,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACNd,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAACI,OAAO,EAAEN,aAAc;MAAAG,QAAA,GAAC,WAC5C,EAACd,cAAc,GAAGG,cAAc,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKJ,cAAc,CAAC,CAACK,IAAI,GAAG,KAAK;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACX,EAAA,CA5CIF,WAAW;EAAA,QAEEN,WAAW;AAAA;AAAA8B,EAAA,GAFxBxB,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}